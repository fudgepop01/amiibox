const t=window.fudgeapps.h;class e{constructor(){this.active=!1}render(){if(!this.active)return;const e=[];if(this.data){let s="string"==typeof this.data?JSON.parse(this.data):this.data;s.name&&e.push(t("span",null,`name: ${s.name}`),t("br",null)),e.push(t("span",null,`size: ${s.end-s.start} [0x${s.start.toString(16)} - 0x${s.end.toString(16)}]`),t("br",null));for(const[n,a]of Object.entries(s))["name","subRegions","start","end"].includes(n)||null!==a&&e.push(t("span",null,n,": ",a),t("br",null))}else e.push(t("span",null,this.simpleText?this.simpleText:"placeholder"));return e}static get is(){return"fudge-hex-tooltip"}static get properties(){return{active:{type:Boolean,attr:"active"},data:{type:String,attr:"complex"},simpleText:{type:String,attr:"simple"}}}static get style(){return"fudge-hex-tooltip{position:fixed;display:none;-webkit-box-sizing:border-box;box-sizing:border-box;font-size:14px;max-width:400px;padding:5px;border-radius:2px;background-color:#000;color:#fff;z-index:1000;pointer-events:none}fudge-hex-tooltip[active=true]{display:block;left:calc(var(--mouse-x) * 1px);top:calc(var(--mouse-y) * 1px);-webkit-transition:left .2s ease,top .2s ease;transition:left .2s ease,top .2s ease}"}}export{e as FudgeHexTooltip};